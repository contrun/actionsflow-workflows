on:
  # Just always run it. Our customized logic lies in the script below.
  script:
    run: |
      const t = new Date().toLocaleString()
      const s = "pocket-to-wallabag: " + t
      return [{"id": s}]
    config:
      every: "15 3 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install nix
        uses: cachix/install-nix-action@v16
        with:
          install_url: https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.7.0pre20220203_bd383d1/install
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            substituters = https://cache.nixos.org/ https://contrun.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= contrun.cachix.org-1:je0xqCRowN4w8BPKw3dOQvKxaINmfnJjVnzwfLYIiKQ=

      - name: Save to wallabag
        env:
          WALLABAG_URL: "${{ secrets.WALLABAG_URL }}"
          WALLABAG_CLIENT_ID: "${{ secrets.WALLABAG_CLIENT_ID }}"
          WALLABAG_CLIENT_SECRET: "${{ secrets.WALLABAG_CLIENT_SECRET }}"
          WALLABAG_USERNAME: "${{ secrets.WALLABAG_USERNAME }}"
          WALLABAG_PASSWORD: "${{ secrets.WALLABAG_PASSWORD }}"
        run: |
          set -euo pipefail

          nix profile install 'github:contrun/wallabag-saver' 'nixpkgs#parallel' 'nixpkgs#python3' 'nixpkgs#git' 'nixpkgs#jq'

          pockexport_dir=/tmp/pockexport
          export_pocket_articles() {
              if ! [[ -d "$pockexport_dir" ]]; then
                  git clone --recursive https://github.com/karlicoss/pockexport.git "$pockexport_dir"
              fi

              pushd "$pockexport_dir"
              python -m venv .venv
              source .venv/bin/activate
              pip3 install --editable .
              popd
              python3 -m pockexport.export --consumer_key "${{ secrets.POCKET_CONSUMER_KEY }}" --access_token "${{ secrets.POCKET_ACCESS_TOKEN }}" | tee "$1"
              deactivate
          }

          # This may frequently fail. We ignore the errors here.
          try_save() {
              urls="$(cat)"
              if ! parallel --will-cite --retries 2 --delay 10s -v -r -j 5 -N 40 wallabag-saver "$@" <<< "$urls"; then
                  >&2 echo "$urls"
                  >&2 echo "Failed to save pocket articles to wallabag"
              fi
          }

          export_pocket_articles pocket.json

          # https://getpocket.com/developer/docs/v3/retrieve
          # status - 0, 1, 2 - 1 if the item is archived - 2 if the item should be deleted
          jq -r '.list[] | select( .status == "0") | if has("resolved_url") then .resolved_url else .given_url end' < pocket.json | try_save -m create -- &
          jq -r '.list[] | select( .status == "1") | if has("resolved_url") then .resolved_url else .given_url end' < pocket.json | try_save -m archive -- &
          jq -r '.list[] | select( .status == "2") | if has("resolved_url") then .resolved_url else .given_url end' < pocket.json | try_save -m delete -- &
          wait
